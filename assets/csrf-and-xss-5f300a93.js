import{j as s}from"./jsx-runtime-f0839969.js";const c="CSRF 和 XSS 攻击",i="2022-09-10T13:15:00.000+08:00",x="记录从《The JWT Handbook》看到的对 XSS 攻击和 CSRF 攻击的通俗解释。",l="zh",h="1min",p="/blog/csrf-and-xss",t=function({children:e}){return s.exports.jsx("article",{className:"prose",children:e})};function o(r){const e=Object.assign({nav:"nav",ol:"ol",li:"li",a:"a",h1:"h1",p:"p",h2:"h2",strong:"strong",code:"code"},r.components);return s.exports.jsxs(s.exports.Fragment,{children:[s.exports.jsx(e.nav,{className:"toc",children:s.exports.jsx(e.ol,{className:"toc-level toc-level-1",children:s.exports.jsxs(e.li,{className:"toc-item toc-item-h1",children:[s.exports.jsx(e.a,{className:"toc-link toc-link-h1",href:"#csrf-和-xss-攻击",children:"CSRF 和 XSS 攻击"}),s.exports.jsxs(e.ol,{className:"toc-level toc-level-2",children:[s.exports.jsx(e.li,{className:"toc-item toc-item-h2",children:s.exports.jsx(e.a,{className:"toc-link toc-link-h2",href:"#cross-site-request-forgen-csrf",children:"Cross Site Request Forgen (CSRF)"})}),s.exports.jsx(e.li,{className:"toc-item toc-item-h2",children:s.exports.jsx(e.a,{className:"toc-link toc-link-h2",href:"#cross-site-scripting-xss",children:"Cross Site Scripting (XSS)"})})]})]})})}),`
`,s.exports.jsx(e.h1,{id:"csrf-和-xss-攻击",children:"CSRF 和 XSS 攻击"}),`
`,s.exports.jsxs(e.p,{children:["从",s.exports.jsx(e.a,{href:"https://auth0.com/resources/ebooks/jwt-handbook",children:"《The JWT Handbook》"}),"看到的，对这两种网络攻击简单易懂的解释。"]}),`
`,s.exports.jsx(e.h2,{id:"cross-site-request-forgen-csrf",children:"Cross Site Request Forgen (CSRF)"}),`
`,s.exports.jsxs(e.p,{children:[s.exports.jsx(e.strong,{children:"跨站点请求伪造"}),"（Cross Site Request Forgery, CSRF），在用户",s.exports.jsx(e.strong,{children:"已经登录"}),`的页面上，诱使客户端向目标站点发送请求。
即攻击者`,s.exports.jsx(e.strong,{children:"冒充"}),"用户（通过劫持 cookie）发起了请求。"]}),`
`,s.exports.jsxs(e.p,{children:["常见的场景是，站点植入了一个",s.exports.jsx(e.code,{children:"<img>"}),"元素，由于浏览器会",s.exports.jsx(e.strong,{children:"忽略同源策略"}),"直接根据",s.exports.jsx(e.code,{children:"<img>"}),"中的",s.exports.jsx(e.code,{children:"src"}),"属性发起请求，所以用户",s.exports.jsx(e.strong,{children:"每次"}),`进入包含该图片的页面时，
`,s.exports.jsx(e.code,{children:"<img>"}),"元素都将冒充用户发起一个请求。"]}),`
`,s.exports.jsxs(e.p,{children:["一般的 CSRF 策略是为从正确源发出的请求添加正确的",s.exports.jsx(e.strong,{children:"头部"}),"。当然，如果 JWT 不被客户端存为 cookie ，那 CSRF 就无法生效。"]}),`
`,s.exports.jsx(e.h2,{id:"cross-site-scripting-xss",children:"Cross Site Scripting (XSS)"}),`
`,s.exports.jsxs(e.p,{children:[s.exports.jsx(e.strong,{children:"跨站点脚本"}),"（Cross Site Scripting, XSS）是将恶意脚本",s.exports.jsx(e.strong,{children:"注入"}),"到受信任站点。恶意脚本可能窃取 cookie 或者 client storage 中的用户 token。"]}),`
`,s.exports.jsxs(e.p,{children:["XSS 攻击一般由不对",s.exports.jsx(e.strong,{children:"传入后端"}),"的数据做合适的校验引起的，类似于 sql 注入攻击。"]}),`
`,s.exports.jsxs(e.p,{children:["同样，防止 XSS 攻击需要在后端对传入的数据做相应处理。如果使用了 cookie，那么将其设置为",s.exports.jsx(e.code,{children:"HttpOnly"}),"的，可以防止用户 token 被劫持。"]})]})}function d(r={}){return s.exports.jsx(t,Object.assign({},r,{children:s.exports.jsx(o,r)}))}export{i as date,d as default,x as description,h as duration,l as lang,p as path,c as title};
